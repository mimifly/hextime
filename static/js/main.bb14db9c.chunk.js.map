{"version":3,"sources":["App.js","index.js"],"names":["App","useState","Date","getHours","currentHour","setCurrentHour","getMinutes","currentMinute","setCurrentMinute","getSeconds","currentSecond","setCurrentSecond","bgColor","setBgColor","sixtyMap","ss","Math","round","useEffect","intervalID","setInterval","clearInterval","hr","backgroundColor","rgb","time","slice","console","log","style","className","r","g","b","check","x","attachZero","z","length","toString","toUpperCase","ReactDOM","render","document","getElementById"],"mappings":"wKAkDeA,MAhDf,WACE,MAAsCC,oBAAS,IAAIC,MAAOC,YAA1D,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CJ,oBAAS,IAAIC,MAAOI,cAA9D,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA0CP,oBAAS,IAAIC,MAAOO,cAA9D,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA8BV,qBAA9B,mBAAOW,EAAP,KAAgBC,EAAhB,KAMA,SAASC,EAASC,GAChB,OAAOC,KAAKC,MAAY,IAALF,EAAY,IAGjCG,qBAAU,WACR,IAAMC,EAAaC,aAAY,WAC7Bf,GAAe,IAAIH,MAAOC,YAC1BK,GAAiB,IAAIN,MAAOI,cAC5BK,GAAiB,IAAIT,MAAOO,gBAC3B,KACH,OAAO,kBAAMY,cAAcF,MAC1B,IAEHD,qBAAU,WAjBV,IAAiBI,EAkBfT,EAAW,CACTU,gBACE,IACAC,GArBWF,EAsBDlB,EArBPY,KAAKC,MAAY,IAALK,EAAY,KAsBzBR,EAASP,GACTO,EAASJ,QAGd,CAACA,IAEJ,IAAMe,EAAI,WAAO,IAAMrB,GAAasB,OAAO,GAAjC,aAAwC,IAAMnB,GAAemB,OACpE,GADO,aAEJ,IAAMhB,GAAegB,OAAO,IAIlC,OAFAC,QAAQC,IAAIhB,GAGV,qBAAKiB,MAAOjB,EAASkB,UAAU,gBAA/B,SACE,6BAAKL,OAOX,SAASD,EAAIO,EAAGC,EAAGC,GAEjB,SAASC,EAAMC,GACb,OAAIA,EAAI,EACC,EAELA,EAAI,IACC,IAEAA,EAIX,SAASC,EAAWC,GAClB,OAAIA,EAAEC,OAAS,EACN,IAAMD,EACDA,EAGhB,OACED,EAAWF,EAAMH,GAAGQ,SAAS,KAC7BH,EAAWF,EAAMF,GAAGO,SAAS,KAC7BH,EAAWF,EAAMD,GAAGM,SAAS,MAC7BC,c,MCtEJC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bb14db9c.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [currentHour, setCurrentHour] = useState(new Date().getHours());\r\n  const [currentMinute, setCurrentMinute] = useState(new Date().getMinutes());\r\n  const [currentSecond, setCurrentSecond] = useState(new Date().getSeconds());\r\n  const [bgColor, setBgColor] = useState();\r\n\r\n  function hourMap(hr) {\r\n    return Math.round((hr * 255) / 24);\r\n  }\r\n\r\n  function sixtyMap(ss) {\r\n    return Math.round((ss * 255) / 60);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const intervalID = setInterval(() => {\r\n      setCurrentHour(new Date().getHours());\r\n      setCurrentMinute(new Date().getMinutes());\r\n      setCurrentSecond(new Date().getSeconds());\r\n    }, 1000);\r\n    return () => clearInterval(intervalID);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setBgColor({\r\n      backgroundColor:\r\n        \"#\" +\r\n        rgb(\r\n          hourMap(currentHour),\r\n          sixtyMap(currentMinute),\r\n          sixtyMap(currentSecond)\r\n        ),\r\n    });\r\n  }, [currentSecond]);\r\n\r\n  const time = `${(\"0\" + currentHour).slice(-2)}:${(\"0\" + currentMinute).slice(\r\n    -2\r\n  )}:${(\"0\" + currentSecond).slice(-2)}`;\r\n\r\n  console.log(bgColor);\r\n\r\n  return (\r\n    <div style={bgColor} className=\"timeContainer\">\r\n      <h1>{time}</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nfunction rgb(r, g, b) {\r\n  // complete this function\r\n  function check(x) {\r\n    if (x < 0) {\r\n      return 0;\r\n    }\r\n    if (x > 255) {\r\n      return 255;\r\n    } else {\r\n      return x;\r\n    }\r\n  }\r\n\r\n  function attachZero(z) {\r\n    if (z.length < 2) {\r\n      return \"0\" + z;\r\n    } else return z;\r\n  }\r\n\r\n  return (\r\n    attachZero(check(r).toString(16)) +\r\n    attachZero(check(g).toString(16)) +\r\n    attachZero(check(b).toString(16))\r\n  ).toUpperCase();\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App.js\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}